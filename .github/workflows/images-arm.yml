name: Build dependabot arm images

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'

jobs:
  build-push-core-image:
    name: Build Core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: dependabot/dependabot-core

      - name: Checkout latest tag
        run: |
          git fetch --tags
          git checkout $(git describe --tags $(git rev-list --tags --max-count=1))

      - name: Docker tags
        id: tags
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/andrcuns/dependabot-updater-core
          flavor: latest=false
          tags: |
            type=semver,pattern={{version}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.4.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4.0.0
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.tags.outputs.tags }}
          file: Dockerfile.updater-core

  build-push-updater-image:
    name: Build Ecosystems
    runs-on: ubuntu-latest
    needs: build-push-core-image
    strategy:
      fail-fast: false
      matrix:
        suite:
          - { name: bundler, ecosystem: bundler }
          - { name: cargo, ecosystem: cargo }
          - { name: composer, ecosystem: composer }
          - { name: docker, ecosystem: docker }
          - { name: elm, ecosystem: elm }
          - { name: git_submodules, ecosystem: gitsubmodule }
          - { name: github_actions, ecosystem: github-actions }
          - { name: go_modules, ecosystem: gomod }
          - { name: gradle, ecosystem: gradle }
          - { name: hex, ecosystem: mix }
          - { name: maven, ecosystem: maven }
          - { name: npm_and_yarn, ecosystem: npm }
          - { name: nuget, ecosystem: nuget }
          - { name: pub, ecosystem: pub }
          - { name: python, ecosystem: pip }
          - { name: terraform, ecosystem: terraform }
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: dependabot/dependabot-core

      - name: Checkout latest tag
        run: |
          git fetch --tags
          git checkout $(git describe --tags $(git rev-list --tags --max-count=1))

      - name: Docker tags
        id: tags
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/andrcuns/dependabot-updater-${{ matrix.suite.ecosystem }}
          flavor: latest=false
          tags: |
            type=semver,pattern={{version}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.4.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Update base images
        run: |
          ls */Dockerfile | xargs sed -i '' 's#dependabot/dependabot-updater-core#andrcuns/dependabot-updater-core#g'

      - name: Build and push
        uses: docker/build-push-action@v4.0.0
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=ghcr.io/andrcuns/dependabot-updater-${{ matrix.suite.ecosystem }}:latest
          cache-to: type=inline
          tags: ${{ steps.tags.outputs.tags }}
          file: ${{ matrix.suite.name }}/Dockerfile
